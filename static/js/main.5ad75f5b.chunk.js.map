{"version":3,"sources":["components/Header.js","components/Formulario.js","helpers.js","components/Mensaje.js","components/Resultado.js","components/Spinner.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","title","Formulario","cantidad","guardarCantidad","plazo","guardarPlazo","guardarTotal","guardarCargando","useState","error","guardarError","onSubmit","e","preventDefault","setTimeout","total","totalCantidad","totalPlazo","calcularTotal","className","type","placeholder","onChange","parseInt","target","value","Mensaje","Resultadao","toFixed","Spinner","App","componente","cargando","Resultado","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.5ad75f5b.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Header = (props) => ( \r\n  <h1>{ props.title }</h1>\r\n);\r\n\r\nexport default Header;","import React, { useState, Fragment } from 'react';\r\nimport { calcularTotal } from '../helpers'\r\n\r\nconst Formulario = (props) => {\r\n\r\n  const { cantidad, guardarCantidad, plazo, guardarPlazo, guardarTotal, guardarCargando } = props\r\n  const [error, guardarError] = useState(false)\r\n\r\n  const calcularPrestamo = e => {\r\n    e.preventDefault()\r\n\r\n    if( cantidad === 0 || plazo === '' ) {\r\n       guardarError(true)\r\n       return \r\n     }\r\n\r\n    guardarError(false)\r\n\r\n    guardarCargando(true)\r\n    \r\n    setTimeout( () => {\r\n      \r\n      const total = calcularTotal(cantidad, plazo)\r\n      \r\n      guardarTotal(total)\r\n\r\n      guardarCargando(false)\r\n\r\n    }, 3000)\r\n\r\n    \r\n  }\r\n\r\n  return ( \r\n    <Fragment>\r\n      <form onSubmit={ calcularPrestamo }>\r\n        <div className=\"row\">\r\n          <div>\r\n            <label>Cantidad Prestamo</label>\r\n            <input \r\n                className=\"u-full-width\" \r\n                type=\"number\" \r\n                placeholder=\"Ejemplo: 3000\"\r\n                onChange={ e => guardarCantidad( parseInt( e.target.value ) ) }\r\n            />\r\n          </div>\r\n          <div>\r\n            <label>Plazo para Pagar</label>\r\n            <select \r\n                className=\"u-full-width\"\r\n                onChange={ e => guardarPlazo( parseInt( e.target.value ) ) }\r\n            >\r\n                <option value=\"\">Seleccionar</option>\r\n                <option value=\"3\">3 meses</option>\r\n                <option value=\"6\">6 meses</option>\r\n                <option value=\"12\">12 meses</option>\r\n                <option value=\"24\">24 meses</option>\r\n            </select>\r\n          </div>\r\n          <div>\r\n            <input \r\n                type=\"submit\" \r\n                value=\"Calcular\" \r\n                className=\"button-primary u-full-width\" \r\n            />\r\n          </div>\r\n        </div>\r\n    </form>\r\n\r\n    { (error) ? <p className=\"error\">Todos los campos son obligatorios</p> : null}\r\n\r\n  </Fragment>\r\n   );\r\n}\r\n \r\nexport default Formulario;","export function calcularTotal(cantidad, plazo) {\r\n\r\n  let totalCantidad\r\n\r\n  if(cantidad <= 1000) {\r\n    totalCantidad = cantidad * .25\r\n  } else if(cantidad > 1000 && cantidad <= 5000) {\r\n    totalCantidad = cantidad * .20\r\n  } else if(cantidad > 5000 && cantidad <= 10000) {\r\n    totalCantidad = cantidad * .15\r\n  } else {\r\n    totalCantidad = cantidad * .10 \r\n  }\r\n\r\n  let totalPlazo = 0\r\n\r\n  switch(plazo) {\r\n    case 3:\r\n      totalPlazo = cantidad * .05\r\n      break\r\n    case 6:\r\n      totalPlazo = cantidad * .1\r\n      break\r\n    case 12:\r\n      totalPlazo = cantidad * .15\r\n      break\r\n    case 24:\r\n      totalPlazo = cantidad * .2\r\n      break\r\n    default:\r\n      break\r\n  }\r\n\r\n  return totalPlazo + totalCantidad + cantidad  \r\n\r\n}","import React from 'react';\r\n\r\nconst Mensaje = () => ( \r\n  <p>Agrega una cantidad y plazo a pagar para cotizar</p>\r\n )\r\n\r\n \r\nexport default Mensaje ","import React from 'react'\r\n\r\nconst Resultadao = ({total, plazo, cantidad}) => {\r\n  return ( \r\n    <div className=\"u-full-width resultado\">\r\n      <h2>Resumen</h2>\r\n      <p>La cantidad solicitada es: $ {cantidad}</p>\r\n      <p>A pagar en: {plazo} meses</p>\r\n      <p>Su pago mensual es de: $ {(total / plazo).toFixed(1)}0</p>\r\n      <p>El total a pagar: $ {total}</p>\r\n    </div>\r\n   );\r\n}\r\n \r\nexport default Resultadao;","import React from 'react'\r\nimport './Spinner.css'\r\n\r\nconst Spinner = () => {\r\n  return ( \r\n    <div className=\"sk-folding-cube\">\r\n      <div className=\"sk-cube1 sk-cube\"></div>\r\n      <div className=\"sk-cube2 sk-cube\"></div>\r\n      <div className=\"sk-cube4 sk-cube\"></div>\r\n      <div className=\"sk-cube3 sk-cube\"></div>\r\n    </div>\r\n   );\r\n}\r\n \r\nexport default Spinner;","import React, { Fragment, useState } from 'react';\nimport Header from './components/Header'\nimport Formulario from './components/Formulario'\nimport Mensaje from './components/Mensaje'\nimport Resultado from './components/Resultado'\nimport Spinner from './components/Spinner'\n\n\nfunction App() {\n\n  const [cantidad, guardarCantidad] = useState(0)\n  const [plazo, guardarPlazo] = useState('')\n  const [total, guardarTotal] = useState(0)\n  const [cargando, guardarCargando] = useState(false)\n\n\n  let componente\n\n  if(cargando) {\n    componente = <Spinner />\n  } else if(total === 0) {\n    componente = <Mensaje />\n  } else {\n    componente = <Resultado \n                    total={total}\n                    plazo={plazo}\n                    cantidad={cantidad}\n                />\n  }\n\n  return (\n    <Fragment>\n      <Header \n        title=\"Cotizador de Prestamos\"\n      />\n      <div className=\"container\">\n        <Formulario \n          cantidad={cantidad}\n          guardarCantidad={guardarCantidad}\n          plazo={plazo}\n          guardarPlazo={guardarPlazo}\n          guardarTotal={guardarTotal}\n          guardarCargando={guardarCargando}\n        />\n\n        <div className=\"mensajes\">\n          {componente}\n        </div>\n      </div>\n    </Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}